{
    "appid": "84f9ba36-2386-4d95-8c7e-b1b9593ac4d6",
    "name": "Forcepoint",
    "description": "This app integrates with Forcepoint Firewall",
    "type": "network security",
    "product_vendor": "Forcepoint",
    "logo": "logo_forcepoint.svg",
    "logo_dark": "logo_forcepoint_dark.svg",
    "product_name": "Forcepoint NGFW",
    "product_version_regex": ".*",
    "python_version": "3",
    "publisher": "Martin Ohl",
    "contributors": [
        {
            "name": "Nikhilesh Chaudhari"
        }
    ],
    "license": "Copyright Martin Ohl 2017-2018",
    "app_version": "1.0.6",
    "utctime_updated": "2018-11-02T21:56:43.000000Z",
    "package_name": "phantom_forcepoint",
    "main_module": "forcepoint_connector.py",
    "min_phantom_version": "5.5.0",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "default": "",
            "required": true,
            "description": "SMC IP address or hostname",
            "data_type": "string",
            "order": 0
        },
        "verify_server_cert": {
            "data_type": "boolean",
            "description": "Verify server certificate",
            "required": true,
            "order": 1,
            "default": false
        },
        "base_port": {
            "default": "",
            "required": true,
            "description": "SMC API Port",
            "data_type": "string",
            "order": 2
        },
        "auth_key": {
            "default": "",
            "required": true,
            "description": "SMC API Auth Key",
            "data_type": "password",
            "order": 3
        },
        "base_version": {
            "default": "",
            "required": true,
            "description": "SMC Version (e.g. 6.2)",
            "data_type": "string",
            "order": 4
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "Tests api cpnnectivity by making a login/logout call to SMC api.",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "block ip",
            "identifier": "block_ip",
            "description": "Block an IP",
            "verbose": "Updates Bad IP list.",
            "type": "contain",
            "read_only": false,
            "parameters": {
                "ip": {
                    "description": "IP to block",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ip"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                },
                "group": {
                    "description": "Group Name to add the IP",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "default": "",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "column_name": "ip",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "certifi",
                "input_file": "wheels/py3/certifi-2023.5.7-py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/shared/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/shared/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/shared/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/shared/urllib3-1.26.16-py2.py3-none-any.whl"
            }
        ]
    }
}
